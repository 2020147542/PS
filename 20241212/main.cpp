/*

문제: 14717번 앉았다

- 앉았다: 20장(1~10까지가 중복으로 존재)의 카드가 사용되며, 2명이 참가
- 경기방법)
    - 각각 참가자는 무작위로 2장의 카드를 가져옴
    - 상대방이 가지고 간 카드를 중복으로 가져갈 수 없음
    - 상대방이 어떤 카드를 가지고 갔는지 알 수 없음
    - 서로의 패를 공개하고, 강한 족보의 패를 가진 사람이 이김. (같으면 비김)

입력 : 영학이의 패를 뜻하는 2개의 정수가 주어짐(1~10사이)
출력 : 영학이가 이길 확률을 소수점 이하 3째까지 출력(반올림)(ex, 0.700)

문제해석시간: 8분
풀이시간: 2시간
고려하지 못한 부분을 gpt 도움 받음

*/

#include <iostream>

using namespace std;

int main()
{
    // 1. 영햑이의 패 입력 받기
    int A, B;
    cin >> A >> B;

    // 2. 영학이가 이길 확률 계산
    double others = 18 * 17 / 2; // 다른 사람이 뽑을 수 있는 전체 경우의 수(20-2개중 2개)
    double possible;             // 영학이가 이길 확률

    // 2-1. 영학이가 땡이라면?
    // 같은 땡은 절대 두 사람에게 동시에 나올 수 없음(비김 없음)
    // 상위 족보일 경우의 수 제거
    if (A == B)
    {
        // 1땡인 경우 => 다른 사람이 2 ~ 10땡 (9개)
        // 2땡인 경우 => 다른 사람이 3 ~ 10땡 (8개)
        // ...
        // 10땡인 경우 => 다른 사람이 될 수 있는 것은 없음
        // 영학이가 이길 확률 = 다른 사람이 질 경우의 수(=전체 경우의 수 - 다른 사람이 이길 경우의 수)/전체 경우의 수
        possible = (others - (10 - A)) / others;
    }
    else
    {

        // 2-2. 영학이가 끗이라면?
        int rest = (A + B) % 10;

        // 각 족보가 나올 경우의 수 구하기(0부터 9끗 표시)
        // 1 1 2 2 3 3 4 4 ... 10 10 중에서 2개가 제외된 나머지들이 가지는 끗의 통계
        int arr[10] = {0};

        for (int i = 1; i < 11; i++)
        {
            for (int j = i + 1; j < 11; j++)
            {
                int idx = (i + j) % 10;

                if ((i == A || i == B) && (j == A || j == B))
                {
                    continue;
                }
                else if ((i == A || i == B) || (j == A || j == B))
                {
                    arr[idx] += 2;
                }
                else
                {
                    arr[idx] += 4;
                }
            }
        }

        // 9끗인 경우 => 0 ~ 8끝
        // 8끗인 경우 => 0 ~ 7끝
        // ...
        // 0끗인 경우 => 다른 사람이 무슨 경우를 해도 안됨
        // 영학이가 이길 확률 = 다른 사람이 질 경우의 수/전체 경우의 수
        int sum = 0;
        for (int k = 0; k < rest; k++)
        {
            sum += arr[k];
        }
        possible = sum / others;
    }

    // 3. 영학이가 이길 확률을 소수점 3자리까지 출력
    cout << fixed;
    cout.precision(3);
    cout << possible << endl;

    return 0;
}